const Discord = require('discord.js')
const { QuickDB } = require('quick.db')

module.exports = {
    name: 'create-ticket',
    description: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ç–∏–∫–µ—Ç–∞',
    options: [{
        name: 'channel',
        type: Discord.ApplicationCommandOptionType.Channel,
      description: '–ö–∞–Ω–∞–ª –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ç–∏–∫–µ—Ç–∞',
      required: true
  }],
    async execute(interaction) {

    const channel = interaction.options.getChannel('channel');

    let manager = await db.get(`${interaction.guild.id}_managers-ticket`);
    let loggs = await db.get(`${interaction.guild.id}_logs-channel`);

  const error = new Discord.EmbedBuilder()
  .setColor('Red')
  .setAuthor({ name: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!' })
  .setTimestamp()
   if(!interaction.member.permissions.has(Discord.PermissionsBitField.Flags.Administrator) && interaction.guild.ownerId !== interaction.user.id) {
      error.setDescription(`–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –Ω–∞ **–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä**!`)
      return interaction.reply({ embeds: [error], epheremal: true })
    }
    if(!manager && manager == null & manager == undefined) {
      error.setDescription(`–ù–µ —É–∫–∞–∑–∞–Ω–∞ —Ä–æ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞–º–∏!\n–£–∫–∞–∂–∏—Ç–µ –µ—ë, –∏—Å–ø–æ–ª—å–∑—É—è \`/managers-ticket\``)
      return interaction.reply({ embeds: [error], epheremal: true })
    }
    if (channel.type != Discord.ChannelType.GuildText) {
      error.setDescription(`–ù–µ–ª—å–∑—è –≤—ã–±—Ä–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤!`)
      return interaction.reply({ embeds: [error], epheremal: true })
     }

try {

    let emb = new Discord.EmbedBuilder()
      .setColor("#2f3136")
      .setTitle("–û—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç")
      .setDescription(
       "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞"
      );

    let row = new Discord.ActionRowBuilder().addComponents(
      new Discord.ButtonBuilder()
        .setCustomId("open_ticket")
        .setLabel("–û—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç")
        .setEmoji("‚úâÔ∏è")
        .setStyle("Primary")
    );

    channel.send({embeds: [emb],components: [row],})

client.on('interactionCreate', async interaction => {
    if (interaction.customId == 'open_ticket') {

      global.chan = await interaction.guild.channels.create({
          parent: null,
          name: `ticket-${interaction.member.id}`,
          topic: `–¢–∏–∫–µ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π ${interaction.user.tag}`,
          permissionOverwrites: [
            {
              id: interaction.user.id,
              allow: [Discord.PermissionsBitField.Flags.ReadMessageHistory, Discord.PermissionsBitField.Flags.ViewChannel, Discord.PermissionsBitField.Flags.SendMessages, Discord.PermissionsBitField.Flags.AttachFiles],
            },
            {
              id: manager,
              allow: [Discord.PermissionsBitField.Flags.ReadMessageHistory, Discord.PermissionsBitField.Flags.ViewChannel, Discord.PermissionsBitField.Flags.SendMessages, Discord.PermissionsBitField.Flags.AttachFiles],
            },
            {
              id: interaction.guild.roles.everyone,
              deny: [Discord.PermissionsBitField.Flags.ViewChannel],
            },
          ],
          type: Discord.ChannelType.GuildText,
        })

    let emba = new Discord.EmbedBuilder()
      .setColor("#2f3136")
      .setTitle("–¢–∏–∫–µ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
      .setDescription(
       "–û–ø–∏—à–∏—Ç–µ –≤—Å—é —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏—Ç..."
      );

    let row = new Discord.ActionRowBuilder().addComponents(
      new Discord.ButtonBuilder()
        .setCustomId("close_ticket")
        .setLabel("–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç")
        .setEmoji("üîê")
        .setStyle("Danger")
    );

    await chan.send({embeds: [emba],components: [row]})

        await interaction.reply({ content: `–¢–∏–∫–µ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω (<#${chan.id}>)!`, ephemeral: true })

if(loggs && loggs != undefined && loggs != null) {
  const ticketon = new Discord.EmbedBuilder()
  .setColor('Green')
  .setDescription(`**–¢–∏–∫–µ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω!**`)
  .addFields(
    { name: '–¢–∏–∫–µ—Ç', value: `<#${chan.id}> (${chan.id})`, inline: true },
    { name: '–°–æ–∑–¥–∞–ª', value: `<@${interaction.member.id}> (${interaction.member.id})`, inline: true },
  )
  .setTimestamp()
    await client.channels.cache.get(loggs).send({ embeds: [ticketon] })
  }
    }

    if (interaction.customId == 'close_ticket') {
        await interaction.reply({content:'–¢–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç!'})

if(loggs && loggs != undefined && loggs != null) {
  const ticketoff = new Discord.EmbedBuilder()
  .setColor('Red')
  .setDescription(`**–¢–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç!**`)
  .addFields(
    { name: '–¢–∏–∫–µ—Ç', value: `<#${chan.id}> (${chan.id})`, inline: true },
    { name: '–ó–∞–∫—Ä—ã–ª', value: `<@${interaction.user.id}> (${interaction.user.id})`, inline: true },
  )
  .setTimestamp()
    await client.channels.cache.get(loggs).send({ embeds: [ticketoff] })
  }

        await interaction.channel.delete()
    }
})
  

} catch(e) { console.log(e)}
  },
};